import { GetServerSideProps, NextPage } from 'next';
import Head from 'next/head';
import { getSession, signIn, getCsrfToken } from 'next-auth/react';

type Props = {
  csrfToken: string
}

const SignIn: NextPage<Props> = ({ csrfToken }: Props) => {
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        <button type="button" onClick={() => signIn('discord')}>
          Sign in with Discord
        </button>
        <h1>Sign In with credentials</h1>
        <form method="post" action="/api/auth/callback/signin">
          <input name="csrfToken" type="hidden" defaultValue={csrfToken} />
          <label htmlFor="email">
            Email
            <input name="email" type="email" />
          </label>
          <label htmlFor="password">
            Password
            <input name="password" type="password" />
          </label>
          <button type="submit">Sign in</button>
        </form>
        <h2>Sign up with credentials</h2>
        <form method="post" action="/api/auth/callback/signup">
          <input name="csrfToken" type="hidden" defaultValue={csrfToken} />
          <label htmlFor="name">
            Name
            <input name="name" type="text" />
          </label>
          <label htmlFor="email">
            Email
            <input name="email" type="email" />
          </label>
          <label htmlFor="password">
            Password
            <input name="password" type="password" />
          </label>
          <label htmlFor="confirmPassword">
            Confirm password
            <input name="confirmPassword" type="password" />
          </label>
          <button type="submit">Sign up</button>
        </form>
      </main>
    </>
  );
};

export const getServerSideProps: GetServerSideProps = async (context) => {
  const session = await getSession(context);
  if (session) {
    return {
      redirect: {
        permanent: false,
        destination: '/',
      },
      props: {},
    };
  }

  return {
    props: {
      csrfToken: await getCsrfToken(context),
    },
  };
};

export default SignIn;
